type Query {
  staffs: [Staff!]!
  staff(id: ID!): Staff!
  stores: [Store!]!
  store(id: ID!): Store!
}

type Mutation {
  createStaff(data: CreateStaffData!): StafffAuthPayload!
  createStore(data: CreateStoreData!): StorefAuthPayload!
  loginStore(data: LoginStoreData!): StoreLoginAuthPayload!
  loginStaff(data: LoginStaffData!): StaffLoginAuthPayload!
}

type StaffLoginAuthPayload {
  token: String!
  staff: Staff!
}

type StoreLoginAuthPayload {
  token: String!
  store: Store!
}

type StorefAuthPayload {
  token: String!
  store: Store!
}

type StafffAuthPayload {
  token: String!
  staff: Staff!
}

type Staff {
  id: ID!
  store: Store!
  firstName: String!
  lastName: String!
  gender: Gender!
  officePhone: Int!
  email: String!
  dateOfBirth: String!
  dateOfJoin: String!
  dateOfLeft: String
  commisionPercentage: Int
  otherDetails: String
  address: Address!
}

type Address {
  line1: String!
  line2: String
  line3: String
  city: String!
  zipOrPasscode: Int!
  stateProvinceCountry: String!
  country: String!
  otherAddressDetails: String
}

enum Gender {
  male
  female
}

type Store {
  id: ID!
  areaCode: Int!
  storeManagerId: ID!
  storeName: String!
  storeLocation: String!
  storeAddress: String!
  otherDetails: String
}

input LoginStoreData {
  email: String!
  password: String!
}


input LoginStaffData {
  email: String!
  password: String!
}

input CreateStaffData {
  storeId: ID!
  email: String!
  password: String!
  confirmPassword: String!
  firstName: String!
  lastName: String!
  gender: Gender!
  officePhone: Int!
  dateOfJoin: String!
  dateOfBirth: String!
  dateOfLeft: String
  jobTitle: String!
  jobDescription: String!
  commisionPercentage: Int
  otherDetails: String
  address: CreateStaffAddressData!
}

input CreateStaffAddressData {
  line1: String!
  line2: String
  line3: String
  city: String!
  zipOrPasscode: Int!
  stateProvinceCountry: String!
  country: String!
  otherAddressDetails: String
}

input CreateStoreData {
  email: String!
  password: String!
  confirmPassword: String!
  areaCode: Int!
  storeName: String!
  storeLocation: String!
  storeAddress: String!
  otherDetails: String
}

